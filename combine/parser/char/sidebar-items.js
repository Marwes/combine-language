initSidebarItems({"fn":[["alpha_num","Parses either an alphabet letter or digit according to [`std::char::is_alphanumeric`]."],["char","Parses a character and succeeds if the character is equal to `c`."],["crlf","Parses carriage return and newline (`\"\\r\\n\"`), returning the newline character."],["digit","Parses a base-10 digit."],["hex_digit","Parses a hexdecimal digit with uppercase and lowercase."],["letter","Parses an alphabet letter according to [`std::char::is_alphabetic`]."],["lower","Parses an lowercase letter according to [`std::char::is_lowercase`]."],["newline","Parses a newline character (`'\\n'`)."],["oct_digit","Parses an octal digit."],["space","Parse a single whitespace according to [`std::char::is_whitespace`]."],["spaces","Skips over zero or more spaces according to [`std::char::is_whitespace`]."],["string","Parses the string `s`."],["string_cmp","Parses the string `s`, using `cmp` to compare each character."],["tab","Parses a tab character (`'\\t'`)."],["upper","Parses an uppercase letter according to [`std::char::is_uppercase`]."]],"struct":[["AlphaNum",""],["CrLf",""],["Digit",""],["HexDigit",""],["Letter",""],["Lower",""],["Newline",""],["OctDigit",""],["Space",""],["Spaces",""],["Str",""],["StrCmp",""],["Tab",""],["Upper",""]]});